{"ast":null,"code":"var _jsxFileName = \"D:\\\\PET Project\\\\Memo\\\\memo\\\\src\\\\Components\\\\ListItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport CardItem from \"./Card\";\nimport { useContext } from \"react\";\nimport { userContext } from \"../context/userContext\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport './CSS/ListItems.css';\nimport NewItem from \"./newItem\";\nimport ModalWindow from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListItems = () => {\n  _s();\n\n  const {\n    user,\n    setUser\n  } = useContext(userContext);\n  const [post, setPost] = useState([]);\n  const [isMountRender, setMountRender] = useState(true);\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: `http://localhost:8080/api/post?id=${user.id}`\n    }).then(function (response) {\n      setPost(response.data);\n    });\n  }, [isMountRender]);\n\n  const deleteHandler = id => {\n    axios({\n      method: 'delete',\n      url: `http://localhost:8080/api/post/${id}`\n    }).then(() => {\n      const newList = post.filter(item => item.id !== id);\n      setPost(newList);\n    }).catch(() => {\n      alert(\"Post delete error\");\n    });\n  };\n\n  const putHandler = () => {\n    post.map(i => {\n      if (i.id === tempPost.id) {\n        if (i.title !== tempPost.title || i.content !== tempPost.content) {\n          axios({\n            method: 'put',\n            url: `http://localhost:8080/api/post`,\n            data: {\n              id: tempPost.id,\n              title: tempPost.title,\n              content: tempPost.content\n            }\n          }).then(() => {\n            const newList = post.map(item => {\n              if (item.id === tempPost.id) {\n                const updatedItem = { ...item,\n                  id: tempPost.id,\n                  title: tempPost.title,\n                  content: tempPost.content\n                };\n                return updatedItem;\n              }\n\n              return item;\n            });\n            setPost(newList);\n          }).catch(() => {\n            alert(\"Post update error\");\n          });\n        }\n      }\n    });\n    setShow(false);\n  };\n\n  const [show, setShow] = useState(false);\n  const [tempPost, setTempPost] = useState({\n    id: '',\n    title: '',\n    content: ''\n  });\n\n  const onChange = _ref => {\n    let {\n      target: {\n        name,\n        value\n      }\n    } = _ref;\n    setTempPost({ ...tempPost,\n      [name]: value\n    });\n  };\n\n  const handleShow = id => {\n    setShow(true);\n    post.map(i => {\n      if (i.id === id) {\n        setTempPost({\n          id: i.id,\n          title: i.title,\n          content: i.content\n        });\n      }\n    });\n  };\n\n  const savePost = response => {\n    setPost([...post, {\n      id: response.data.id,\n      title: response.data.title,\n      content: response.data.content\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listItems\",\n      children: [post.map(item => {\n        return /*#__PURE__*/_jsxDEV(CardItem, {\n          id: item.id,\n          title: item.title,\n          content: item.content,\n          deleteHandler: deleteHandler,\n          handleShow: handleShow\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 24\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(ModalWindow, {\n        show: show,\n        setShow: setShow,\n        post: tempPost,\n        btnTitle: \"Edit\",\n        onChange: onChange,\n        handleEdit: putHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewItem, {\n      savePost: savePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ListItems, \"+EMvaChC+sxzXEy0drR4xETVoH4=\");\n\n_c = ListItems;\nexport default ListItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItems\");","map":{"version":3,"names":["React","useEffect","CardItem","useContext","userContext","axios","useState","NewItem","ModalWindow","ListItems","user","setUser","post","setPost","isMountRender","setMountRender","method","url","id","then","response","data","deleteHandler","newList","filter","item","catch","alert","putHandler","map","i","tempPost","title","content","updatedItem","setShow","show","setTempPost","onChange","target","name","value","handleShow","savePost"],"sources":["D:/PET Project/Memo/memo/src/Components/ListItems.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport CardItem from \"./Card\";\r\nimport {useContext} from \"react\";\r\nimport {userContext} from \"../context/userContext\";\r\nimport axios from \"axios\";\r\nimport {useState} from \"react\";\r\nimport './CSS/ListItems.css'\r\nimport NewItem from \"./newItem\";\r\nimport ModalWindow from \"./Modal\";\r\n\r\nconst ListItems = () => {\r\n    const {user, setUser} = useContext(userContext)\r\n    const [post, setPost] = useState([])\r\n    const [isMountRender, setMountRender] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'get', url: `http://localhost:8080/api/post?id=${user.id}`,\r\n        }).then(function (response) {\r\n            setPost(response.data)\r\n        });\r\n\r\n    }, [isMountRender,]);\r\n\r\n    const deleteHandler = (id) => {\r\n        axios({\r\n            method: 'delete', url: `http://localhost:8080/api/post/${id}`,\r\n        }).then(() => {\r\n            const newList = post.filter((item) => item.id !== id);\r\n            setPost(newList)\r\n        }).catch(() => {\r\n            alert(\"Post delete error\")\r\n        })\r\n\r\n    }\r\n\r\n    const putHandler = () => {\r\n        post.map((i) => {\r\n            if (i.id === tempPost.id) {\r\n                if (i.title !== tempPost.title || i.content !== tempPost.content) {\r\n                    axios({\r\n                        method: 'put', url: `http://localhost:8080/api/post`,\r\n                        data: {\r\n                            id: tempPost.id,\r\n                            title: tempPost.title,\r\n                            content: tempPost.content\r\n                        }\r\n                    }).then(() => {\r\n                        const newList = post.map((item) => {\r\n                            if (item.id === tempPost.id) {\r\n                                const updatedItem = {\r\n                                    ...item,\r\n                                    id: tempPost.id,\r\n                                    title: tempPost.title,\r\n                                    content: tempPost.content\r\n                                };\r\n\r\n                                return updatedItem;\r\n                            }\r\n\r\n                            return item;\r\n                        });\r\n\r\n                        setPost(newList);\r\n                    }).catch(() => {\r\n                        alert(\"Post update error\")\r\n                    })\r\n\r\n                }\r\n            }\r\n        })\r\n        setShow(false)\r\n    }\r\n    const [show, setShow] = useState(false);\r\n    const [tempPost, setTempPost] = useState({\r\n        id: '', title: '', content: ''\r\n    })\r\n    const onChange = ({target: {name, value}}) => {\r\n        setTempPost({...tempPost, [name]: value})\r\n    };\r\n    const handleShow = (id) => {\r\n        setShow(true)\r\n        post.map((i) => {\r\n            if (i.id === id) {\r\n                setTempPost({\r\n                    id: i.id,\r\n                    title: i.title,\r\n                    content: i.content\r\n                })\r\n            }\r\n        })\r\n\r\n    };\r\n\r\n    const savePost = (response) => {\r\n        setPost([...post, {\r\n            id: response.data.id,\r\n            title: response.data.title,\r\n            content: response.data.content\r\n        }])\r\n    }\r\n    return (<>\r\n        <div className=\"listItems\">\r\n            {post.map((item) => {\r\n                return <CardItem id={item.id} key={item.id} title={item.title} content={item.content}\r\n                                 deleteHandler={deleteHandler} handleShow={handleShow}/>\r\n            })}\r\n            <ModalWindow show={show} setShow={setShow} post={tempPost}\r\n                         btnTitle={\"Edit\"} onChange={onChange} handleEdit={putHandler}/>\r\n        </div>\r\n        <NewItem savePost={savePost}/>\r\n    </>);\r\n};\r\n\r\nexport default ListItems;"],"mappings":"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"},"metadata":{},"sourceType":"module"}