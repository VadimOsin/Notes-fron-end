{"ast":null,"code":"var _jsxFileName = \"D:\\\\PET Project\\\\Memo\\\\memo\\\\src\\\\Components\\\\ListItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport CardItem from \"./Card\";\nimport { useContext } from \"react\";\nimport { userContext } from \"../context/userContext\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport './CSS/ListItems.css';\nimport ModalWindow from \"./Modal\";\nimport { store } from \"../store/store\";\nimport { putPost, getPost, deletePost } from '../store/actionCreators/postActionCreator';\nimport { useDispatch } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListItems = _ref => {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const [show, setShow] = useState(false);\n  const [tempPost, setTempPost] = useState({\n    id: '',\n    title: '',\n    content: ''\n  });\n  const [query, setQuery] = useState(\"\");\n  const {\n    user\n  } = useContext(userContext);\n  const dispatch = useDispatch();\n\n  const onChange = _ref2 => {\n    let {\n      target: {\n        name,\n        value\n      }\n    } = _ref2;\n    setTempPost({ ...tempPost,\n      [name]: value\n    });\n  };\n\n  const handleShow = id => {\n    setShow(true);\n    post.map(i => {\n      if (i.id === id) {\n        setTempPost({\n          id: i.id,\n          title: i.title,\n          content: i.content\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: `http://localhost:8080/api/post?id=${user.id}`\n    }).then(function (response) {\n      dispatch(getPost(response.data));\n    });\n  }, []);\n\n  const deleteHandler = id => {\n    axios({\n      method: 'delete',\n      url: `http://localhost:8080/api/post/${id}`\n    }).then(() => {\n      dispatch(deletePost(id));\n    }).catch(() => {\n      alert(\"Post delete error\");\n    });\n  };\n\n  const putHandler = () => {\n    post.map(i => {\n      if (i.id === tempPost.id) {\n        if (i.title !== tempPost.title || i.content !== tempPost.content) {\n          axios({\n            method: 'put',\n            url: `http://localhost:8080/api/post`,\n            data: {\n              id: tempPost.id,\n              title: tempPost.title,\n              content: tempPost.content\n            }\n          }).then(() => {\n            store.dispatch(putPost(tempPost));\n          }).catch(() => {\n            alert(\"Post update error\");\n          });\n        }\n      }\n    });\n    setShow(false);\n  };\n\n  {\n    if (post.length) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          className: \"d-flex listItems-search\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"search\",\n            placeholder: \"Search\",\n            \"aria-label\": \"Search\",\n            onChange: event => setQuery(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-success\",\n            className: \"listItems-search-btn\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listItems\",\n          children: [post.filter(item => {\n            if (query === '') {\n              return item;\n            } else if (item.title.toLowerCase().includes(query.toLowerCase())) {\n              return item;\n            }\n          }).map(item => {\n            return /*#__PURE__*/_jsxDEV(CardItem, {\n              post: item,\n              deleteHandler: deleteHandler,\n              handleShow: handleShow\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 36\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(ModalWindow, {\n            show: show,\n            setShow: setShow,\n            post: tempPost,\n            btnTitle: \"Edit\",\n            onChange: onChange,\n            handleEdit: putHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } else return null;\n  }\n};\n\n_s(ListItems, \"NfTJyFC4gGS5fUqQByEU2onDyd0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ListItems;\nexport default ListItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItems\");","map":{"version":3,"names":["React","useEffect","CardItem","useContext","userContext","axios","useState","ModalWindow","store","putPost","getPost","deletePost","useDispatch","Form","Button","ListItems","post","show","setShow","tempPost","setTempPost","id","title","content","query","setQuery","user","dispatch","onChange","target","name","value","handleShow","map","i","method","url","then","response","data","deleteHandler","catch","alert","putHandler","length","event","filter","item","toLowerCase","includes"],"sources":["D:/PET Project/Memo/memo/src/Components/ListItems.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport CardItem from \"./Card\";\r\nimport {useContext} from \"react\";\r\nimport {userContext} from \"../context/userContext\";\r\nimport axios from \"axios\";\r\nimport {useState} from \"react\";\r\nimport './CSS/ListItems.css'\r\nimport ModalWindow from \"./Modal\";\r\nimport {store} from \"../store/store\";\r\nimport {putPost, getPost, deletePost} from '../store/actionCreators/postActionCreator'\r\nimport {useDispatch} from \"react-redux\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst ListItems = ({post}) => {\r\n        const [show, setShow] = useState(false);\r\n        const [tempPost, setTempPost] = useState({\r\n            id: '', title: '', content: ''\r\n        })\r\n        const [query, setQuery] = useState(\"\")\r\n        const {user} = useContext(userContext)\r\n        const dispatch = useDispatch();\r\n        const onChange = ({target: {name, value}}) => {\r\n            setTempPost({...tempPost, [name]: value})\r\n        };\r\n        const handleShow = (id) => {\r\n            setShow(true)\r\n            post.map((i) => {\r\n                if (i.id === id) {\r\n                    setTempPost({\r\n                        id: i.id,\r\n                        title: i.title,\r\n                        content: i.content\r\n                    })\r\n                }\r\n            })\r\n\r\n        };\r\n\r\n        useEffect(() => {\r\n            axios({\r\n                method: 'get', url: `http://localhost:8080/api/post?id=${user.id}`,\r\n            }).then(function (response) {\r\n                dispatch(getPost(response.data))\r\n            });\r\n        }, []);\r\n\r\n        const deleteHandler = (id) => {\r\n            axios({\r\n                method: 'delete', url: `http://localhost:8080/api/post/${id}`,\r\n            }).then(() => {\r\n                dispatch(deletePost(id))\r\n            }).catch(() => {\r\n                alert(\"Post delete error\")\r\n            })\r\n        }\r\n\r\n        const putHandler = () => {\r\n            post.map((i) => {\r\n                if (i.id === tempPost.id) {\r\n                    if (i.title !== tempPost.title || i.content !== tempPost.content) {\r\n                        axios({\r\n                            method: 'put', url: `http://localhost:8080/api/post`,\r\n                            data: {\r\n                                id: tempPost.id,\r\n                                title: tempPost.title,\r\n                                content: tempPost.content\r\n                            }\r\n                        }).then(() => {\r\n                            store.dispatch(putPost(tempPost))\r\n                        }).catch(() => {\r\n                            alert(\"Post update error\")\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            setShow(false)\r\n        }\r\n\r\n        {\r\n            if (post.length) {\r\n                return (<>\r\n                    <Form className=\"d-flex listItems-search\">\r\n                        <Form.Control\r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            aria-label=\"Search\"\r\n                            onChange={event => setQuery(event.target.value)}\r\n                        />\r\n                        <Button variant=\"outline-success\" className=\"listItems-search-btn\">Search</Button>\r\n                    </Form>\r\n                    <div className=\"listItems\">\r\n                        {post.filter(item => {\r\n                            if (query === '') {\r\n                                return item;\r\n                            } else if (item.title.toLowerCase().includes(query.toLowerCase())) {\r\n                                return item;\r\n                            }\r\n                        }).map((item) => {\r\n                            return <CardItem key={item.id} post={item}\r\n                                             deleteHandler={deleteHandler} handleShow={handleShow}/>\r\n                        })}\r\n                        <ModalWindow show={show} setShow={setShow} post={tempPost}\r\n                                     btnTitle={\"Edit\"} onChange={onChange} handleEdit={putHandler}/>\r\n                    </div>\r\n                </>);\r\n            } else return null;\r\n        }\r\n    }\r\n\r\n;\r\n\r\nexport default ListItems;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,SAAQC,UAAR,QAAyB,OAAzB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAO,qBAAP;AACA,OAAOC,WAAP,MAAwB,SAAxB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,UAA1B,QAA2C,2CAA3C;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;;AAEA,MAAMC,SAAS,GAAG,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EACtB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC;IACrCe,EAAE,EAAE,EADiC;IAC7BC,KAAK,EAAE,EADsB;IAClBC,OAAO,EAAE;EADS,CAAD,CAAxC;EAGA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM;IAACoB;EAAD,IAASvB,UAAU,CAACC,WAAD,CAAzB;EACA,MAAMuB,QAAQ,GAAGf,WAAW,EAA5B;;EACA,MAAMgB,QAAQ,GAAG,SAA6B;IAAA,IAA5B;MAACC,MAAM,EAAE;QAACC,IAAD;QAAOC;MAAP;IAAT,CAA4B;IAC1CX,WAAW,CAAC,EAAC,GAAGD,QAAJ;MAAc,CAACW,IAAD,GAAQC;IAAtB,CAAD,CAAX;EACH,CAFD;;EAGA,MAAMC,UAAU,GAAIX,EAAD,IAAQ;IACvBH,OAAO,CAAC,IAAD,CAAP;IACAF,IAAI,CAACiB,GAAL,CAAUC,CAAD,IAAO;MACZ,IAAIA,CAAC,CAACb,EAAF,KAASA,EAAb,EAAiB;QACbD,WAAW,CAAC;UACRC,EAAE,EAAEa,CAAC,CAACb,EADE;UAERC,KAAK,EAAEY,CAAC,CAACZ,KAFD;UAGRC,OAAO,EAAEW,CAAC,CAACX;QAHH,CAAD,CAAX;MAKH;IACJ,CARD;EAUH,CAZD;;EAcAtB,SAAS,CAAC,MAAM;IACZI,KAAK,CAAC;MACF8B,MAAM,EAAE,KADN;MACaC,GAAG,EAAG,qCAAoCV,IAAI,CAACL,EAAG;IAD/D,CAAD,CAAL,CAEGgB,IAFH,CAEQ,UAAUC,QAAV,EAAoB;MACxBX,QAAQ,CAACjB,OAAO,CAAC4B,QAAQ,CAACC,IAAV,CAAR,CAAR;IACH,CAJD;EAKH,CANQ,EAMN,EANM,CAAT;;EAQA,MAAMC,aAAa,GAAInB,EAAD,IAAQ;IAC1BhB,KAAK,CAAC;MACF8B,MAAM,EAAE,QADN;MACgBC,GAAG,EAAG,kCAAiCf,EAAG;IAD1D,CAAD,CAAL,CAEGgB,IAFH,CAEQ,MAAM;MACVV,QAAQ,CAAChB,UAAU,CAACU,EAAD,CAAX,CAAR;IACH,CAJD,EAIGoB,KAJH,CAIS,MAAM;MACXC,KAAK,CAAC,mBAAD,CAAL;IACH,CAND;EAOH,CARD;;EAUA,MAAMC,UAAU,GAAG,MAAM;IACrB3B,IAAI,CAACiB,GAAL,CAAUC,CAAD,IAAO;MACZ,IAAIA,CAAC,CAACb,EAAF,KAASF,QAAQ,CAACE,EAAtB,EAA0B;QACtB,IAAIa,CAAC,CAACZ,KAAF,KAAYH,QAAQ,CAACG,KAArB,IAA8BY,CAAC,CAACX,OAAF,KAAcJ,QAAQ,CAACI,OAAzD,EAAkE;UAC9DlB,KAAK,CAAC;YACF8B,MAAM,EAAE,KADN;YACaC,GAAG,EAAG,gCADnB;YAEFG,IAAI,EAAE;cACFlB,EAAE,EAAEF,QAAQ,CAACE,EADX;cAEFC,KAAK,EAAEH,QAAQ,CAACG,KAFd;cAGFC,OAAO,EAAEJ,QAAQ,CAACI;YAHhB;UAFJ,CAAD,CAAL,CAOGc,IAPH,CAOQ,MAAM;YACV7B,KAAK,CAACmB,QAAN,CAAelB,OAAO,CAACU,QAAD,CAAtB;UACH,CATD,EASGsB,KATH,CASS,MAAM;YACXC,KAAK,CAAC,mBAAD,CAAL;UACH,CAXD;QAYH;MACJ;IACJ,CAjBD;IAkBAxB,OAAO,CAAC,KAAD,CAAP;EACH,CApBD;;EAsBA;IACI,IAAIF,IAAI,CAAC4B,MAAT,EAAiB;MACb,oBAAQ;QAAA,wBACJ,QAAC,IAAD;UAAM,SAAS,EAAC,yBAAhB;UAAA,wBACI,QAAC,IAAD,CAAM,OAAN;YACI,IAAI,EAAC,QADT;YAEI,WAAW,EAAC,QAFhB;YAGI,cAAW,QAHf;YAII,QAAQ,EAAEC,KAAK,IAAIpB,QAAQ,CAACoB,KAAK,CAAChB,MAAN,CAAaE,KAAd;UAJ/B;YAAA;YAAA;YAAA;UAAA,QADJ,eAOI,QAAC,MAAD;YAAQ,OAAO,EAAC,iBAAhB;YAAkC,SAAS,EAAC,sBAA5C;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAPJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADI,eAUJ;UAAK,SAAS,EAAC,WAAf;UAAA,WACKf,IAAI,CAAC8B,MAAL,CAAYC,IAAI,IAAI;YACjB,IAAIvB,KAAK,KAAK,EAAd,EAAkB;cACd,OAAOuB,IAAP;YACH,CAFD,MAEO,IAAIA,IAAI,CAACzB,KAAL,CAAW0B,WAAX,GAAyBC,QAAzB,CAAkCzB,KAAK,CAACwB,WAAN,EAAlC,CAAJ,EAA4D;cAC/D,OAAOD,IAAP;YACH;UACJ,CANA,EAMEd,GANF,CAMOc,IAAD,IAAU;YACb,oBAAO,QAAC,QAAD;cAAwB,IAAI,EAAEA,IAA9B;cACU,aAAa,EAAEP,aADzB;cACwC,UAAU,EAAER;YADpD,GAAee,IAAI,CAAC1B,EAApB;cAAA;cAAA;cAAA;YAAA,QAAP;UAEH,CATA,CADL,eAWI,QAAC,WAAD;YAAa,IAAI,EAAEJ,IAAnB;YAAyB,OAAO,EAAEC,OAAlC;YAA2C,IAAI,EAAEC,QAAjD;YACa,QAAQ,EAAE,MADvB;YAC+B,QAAQ,EAAES,QADzC;YACmD,UAAU,EAAEe;UAD/D;YAAA;YAAA;YAAA;UAAA,QAXJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAVI;MAAA,gBAAR;IAyBH,CA1BD,MA0BO,OAAO,IAAP;EACV;AACJ,CA9FL;;GAAM5B,S;UAOmBH,W;;;KAPnBG,S;AAkGN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}